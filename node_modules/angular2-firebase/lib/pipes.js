// Angular 2 Toolkit - Firebase Observable Pipes
// Copyright 2015-2016 Oasis Digital - http://oasisdigital.com
//     written by Kyle Cordes - http://kylecordes.com
// started November 2015
System.register(['angular2/core', "rxjs/add/operator/map", './observableFirebase'], function(exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = (this && this.__metadata) || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1, observableFirebase_1;
    var FirebaseToObservableObjectPipe, FirebaseToObservableArrayPipe, ArrayifyObservablePipe;
    return {
        setters:[
            function (core_1_1) {
                core_1 = core_1_1;
            },
            function (_1) {},
            function (observableFirebase_1_1) {
                observableFirebase_1 = observableFirebase_1_1;
            }],
        execute: function() {
            FirebaseToObservableObjectPipe = (function () {
                function FirebaseToObservableObjectPipe() {
                }
                FirebaseToObservableObjectPipe.prototype.transform = function (input, args) {
                    if (args === void 0) { args = []; }
                    if (input) {
                        return observableFirebase_1.observableFirebaseObject(input);
                    }
                };
                FirebaseToObservableObjectPipe = __decorate([
                    core_1.Pipe({
                        name: 'firebaseToObservableObject'
                    }), 
                    __metadata('design:paramtypes', [])
                ], FirebaseToObservableObjectPipe);
                return FirebaseToObservableObjectPipe;
            }());
            exports_1("FirebaseToObservableObjectPipe", FirebaseToObservableObjectPipe);
            FirebaseToObservableArrayPipe = (function () {
                function FirebaseToObservableArrayPipe() {
                }
                FirebaseToObservableArrayPipe.prototype.transform = function (input, args) {
                    if (args === void 0) { args = []; }
                    if (input) {
                        return observableFirebase_1.observableFirebaseArray(input);
                    }
                };
                FirebaseToObservableArrayPipe = __decorate([
                    core_1.Pipe({
                        name: 'firebaseToObservableArray'
                    }), 
                    __metadata('design:paramtypes', [])
                ], FirebaseToObservableArrayPipe);
                return FirebaseToObservableArrayPipe;
            }());
            exports_1("FirebaseToObservableArrayPipe", FirebaseToObservableArrayPipe);
            ArrayifyObservablePipe = (function () {
                function ArrayifyObservablePipe() {
                }
                ArrayifyObservablePipe.prototype.transform = function (input, args) {
                    if (args === void 0) { args = []; }
                    if (input) {
                        return input.map(function (x) { return [x]; });
                    }
                };
                ArrayifyObservablePipe = __decorate([
                    core_1.Pipe({
                        name: 'arrayifyObservable'
                    }), 
                    __metadata('design:paramtypes', [])
                ], ArrayifyObservablePipe);
                return ArrayifyObservablePipe;
            }());
            exports_1("ArrayifyObservablePipe", ArrayifyObservablePipe);
        }
    }
});
//# sourceMappingURL=pipes.js.map